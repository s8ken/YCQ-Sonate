server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Application logs
  - job_name: symbi-app-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: symbi-app
          __path__: /var/log/symbi/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            request_id: request_id
            actor_id: actor_id
            decision_id: decision_id
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          request_id:
          actor_id:
          decision_id:

  # Docker container logs
  - job_name: docker-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*?)'
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{container_name="symbi-app"}'
          stages:
            - json:
                expressions:
                  level: level
                  timestamp: timestamp
                  message: message
                  request_id: request_id
                  actor_id: actor_id
            - timestamp:
                source: timestamp
                format: RFC3339
            - labels:
                level:
                request_id:
                actor_id:

  # System logs
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+):\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: 'Jan 02 15:04:05'
      - labels:
          hostname:
          service:

  # Nginx access logs (if using nginx)
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>[\w\.]+)\s+-\s+(?P<remote_user>\S+)\s+\[(?P<time_local>[^\]]+)\]\s+"(?P<method>\S+)\s+(?P<request>\S+)\s+(?P<protocol>\S+)"\s+(?P<status>\d+)\s+(?P<body_bytes_sent>\d+)\s+"(?P<http_referer>[^"]*)"\s+"(?P<http_user_agent>[^"]*)"'
      - timestamp:
          source: time_local
          format: '02/Jan/2006:15:04:05 -0700'
      - labels:
          method:
          status:
          remote_addr:

  # Application error logs
  - job_name: symbi-error-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: symbi-errors
          __path__: /var/log/symbi/error.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            error: error
            stack: stack
            request_id: request_id
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          request_id:
